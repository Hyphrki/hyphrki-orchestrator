version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: orchestrator-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - orchestrator-network

  grafana:
    image: grafana/grafana:latest
    container_name: orchestrator-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - orchestrator-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: orchestrator-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - orchestrator-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: orchestrator-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://orchestrator:password@postgres:5432/orchestrator_prod?sslmode=disable
    depends_on:
      - postgres
    networks:
      - orchestrator-network

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: orchestrator-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=
    depends_on:
      - redis
    networks:
      - orchestrator-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: orchestrator-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    volumes:
      - jaeger_data:/tmp
    networks:
      - orchestrator-network

volumes:
  prometheus_data:
  grafana_data:
  jaeger_data:

networks:
  orchestrator-network:
    external: true
    name: orchestrator_orchestrator-network
